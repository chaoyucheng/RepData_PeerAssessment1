par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p$x.limits
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diaminds)
str(diamonds)
table(diamonds$color)
table(diamonds$olor, iamonds$cut)
table(diamonds$olor, diamonds$cut)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.r"), local=TRUE)
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, diamonds, strip = FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
bye
library(swirl)
swirl()
library(swirl)
swirl()
sample(color(), 10)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
lap(seq(0,1,len=6))
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
oxcc
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showme(p1(20))
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(colors=c("blue", "green"), alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0, .5, .5))
plot(x,y,pch=19,col=rgb(0, .5, .5), .3)
plot(x,y,pch=19,col=rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
cols
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
sr(mpg)
str(mpg)
qplot(displ, hwy, mpg)
?qplot
head(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(hwy, date=mpg, color=drv)
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, geom="boxplot", aesthetic=drv)
qplot(hwy, data=mpg, aesthetic=drv)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~3)
qplot(displ, hwy, data=mpg, facets=.~3drv)
qplot(displ, hwy, data=mpg, facets=.~3 drv)
qplot(displ, hwy, data=mpg, facets=. ~ drv)
qplot(hwy, data=mpg, facets=.~drv, binwidth=2)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
g <- ggplot(mpg, displ~hwy)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(lm)
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetye=3, method="lm", se=FALSE)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetye=3, method="lm", se=FALSE)
g + geom_point(aes(color = drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
warnings()
plot(myx, myy, type="l", and ylim=c(-3,3))
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(dataset, aes(x=displ, y=hwy. color=factor(year)))
g <- ggplot(dataset=mpg, aes(x=displ, y=hwy. color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy. color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy))
g <- ggplot(mpg, aes(x=displ, y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(formula=drv_cyl, margins=TRUE)
g+geom_point()+facet_grid(formula=drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(formula(drv~cyl), margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Dislacement", y="Highway Mileage", title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",size=2, se=FALSE, color="black")+labs(x="Dislacement", y="Highway Mileage", title="Swirl Rules!")
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"), method="lm")
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"), method="lm", facets=.~cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$carw <- cutpoints
diamonds$car2 <- cutpoints
cutpoints <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3, facet_grid(cut ~ car2))
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price) + geom_boxplot() + facet_grid(formua= . ~ cut)
)
ggplot(diamonds, aes(carat, price) + geom_boxplot() + facet_grid(formula= . ~ cut)
)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(formula= . ~ cut)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
p <- xyplot(weight ~ Time | Diet, BodyWeight)
p
str(p)
?xyplot
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?lines
library(swirl)
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
4
5
12
abline(h=.05, col="green")
dist(dFsm)
c
hc
heatmap(dataMartrix, col=cm.colors(25))
heatmap(dataMatrix, col=cm.colors(25))
View(dataMatrix)
heatmap(mt)
View(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), col=cols1, pch=3, cex=3, lwd=3)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library(swirl)
swir()
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sim(table(ssd$subject))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, 1)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
sub1
dim(sub1)
names(head(ssd,12))
names(sub1[1:12}])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
sclustering <- hclust(mdist)
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col=unclass(sub$activity))
myplclust(hclustering, lab.col=unclass(sub$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(dist)
hclustering <- hclust(mdist)
myplclust(hcustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
svd1$u
dim(svd1$u)
maxcon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon)
)
mdist <- dist(c(sub1[,10:12], sub1[, maxCon]))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity)
)
names(sub1[maxCon])
kclust <- kmeans(sub1[], centers=6)
kclust <- kmeans(sub1[1:-2], centers=6)
kclust <- kmeans(sub1[1:-3], centers=6)
dim(sub1)
kclust <- kmeans(sub1[1:561], centers=6)
kclust <- kmeans(sub1[,1:561], centers=6)
kclust <- kmeans(sub1[, -c(562,563)], centers=6)
kclust <- kmeans(sub1[, -c(562, 563)], centers=6)
kclust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kclust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kclust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
dim(kclust)
dim(kclust$centers)
dim(kclust$centers)
dim(kClust$centers)
laying <- which(kclust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1)
names(sub1[,1:3])
walkdown <- which(kclust$size==49)
walkdown <- which(kClust$size==490
)
walkdown <- which(kClust$size==490)
walkdown <- which(kClust$size==49)
plot(kClust$centers(walkdown, 1:12, pch=19, ylab="walkdown Cluster"))
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="walkdown Cluster"))
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="walkdown Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
title: "Untitled"
setwd("R Lab")
setwd("DS5")
setwd("proj1")
library(lubridate)
library(ggplot2)
acty <- read.csv("activity/activity.csv")
str_x <- formatC(acty$interval, width=4, flag="0")
str_y <- paste(substr(str_x, 1, 2), ":", substr(str_x, 3, 4), sep="")
acty$time <- hm(str_y)
sum(is.na(acty$steps))
steps_each_day <- aggregate(acty$steps, list(Date = acty$date), sum, na.rm=TRUE)
qplot(steps_each_day$x, geom="histogram")
steps_mean_each_day <- mean(steps_each_day$x, na.rm=TRUE)
steps_median_each_day <- median(steps_each_day$x, na.rm=TRUE)
steps_mean_interval <- aggregate(acty$steps, list(interval = acty$interval),
mean, na.rm=TRUE)
str_x <- formatC(steps_mean_interval$interval, width=4, flag="0")
str_y <- paste(substr(str_x, 1, 2), ":", substr(str_x, 3, 4), sep="")
steps_mean_interval$time <- strptime(str_y, "%H:%M")
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l")
for (i in 1:nrow(acty)) {
if (is.na(acty[i, "steps"])) {
acty[i, "steps"] <-
steps_mean_interval$x[steps_mean_interval$Interval==acty[i,"interval"]]
}
}
i 20
i <- 20
is.na(acty[i, "steps"])
acty[i, "steps"]
steps_mean_interval$x[steps_mean_interval$Interval==acty[i,"interval"]]
steps_mean_interval$Interval==acty[i,"interval"]
acty[i,"interval"]
steps_mean_interval$Interval==135
subset(steps_mean_interval$x, steps_mean_interval$Interval==acty[i,"interval"])
subset(steps_mean_interval, steps_mean_interval$Interval==acty[i,"interval"])
?subset
subset(steps_mean_interval, Interval==acty[i,"interval"])
subset(steps_mean_interval, interval==acty[i,"interval"])
steps_mean_interval$x[steps_mean_interval$interval==acty[i,"interval"]]
for (i in 1:nrow(acty)) {
if (is.na(acty[i, "steps"])) {
acty[i, "steps"] <-
steps_mean_interval$x[steps_mean_interval$interval==acty[i,"interval"]]
}
}
acty
sum(is.na(acty$steps))
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l")
max(steps_mean_interval$x)
steps_mean_interval[,steps_mean_interval$x==max(steps_mean_interval$x)]
steps_mean_interval[,x==max(steps_mean_interval$x)]
head(steps_mean_interval)
steps_mean_interval[x==max(steps_mean_interval$x),]
steps_mean_interval["x"==max(steps_mean_interval$x),]
steps_mean_interval[,"x"==max(steps_mean_interval$x)]
max(steps_mean_interval$x
)
subset(steps_mean_interval, max(steps_mean_interval$x)
)
subset(steps_mean_interval, max(steps_mean_interval$x))
subset(steps_mean_interval, x==max(steps_mean_interval$x))
max_steps <- subset(steps_mean_interval, x==max(steps_mean_interval$x))
max_steps
max_steps$time
abline(v=max_steps$time)
max_steps$time
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l")
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l")
max_steps$time
steps_mean_interval$time
max_steps$time
abline(v=max_steps$time)
abline(v=3)
abline(v="06:00")
max_steps$time
as.numeric(max_steps$time)
abline(v=1442493300)
abline(v=as.numeric(max_steps$time), col"blue")
abline(v=as.numeric(max_steps$time), col="red")
?plot
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l",
main="Average number of steps in a day",
xlab="Time interval", ylab="Number of steps")
max_steps <- subset(steps_mean_interval, x==max(steps_mean_interval$x))
abline(v=as.numeric(max_steps$time), col="red")
?abline
?text
?abline
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l",
main="Average number of steps in a day",
xlab="Time interval", ylab="Number of steps")
max_steps <- subset(steps_mean_interval, x==max(steps_mean_interval$x))
abline(v=as.numeric(max_steps$time), col="red")
?text
?abline
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l",
main="Average number of steps in a day",
xlab="Time interval", ylab="Number of steps")
max_steps <- subset(steps_mean_interval, x==max(steps_mean_interval$x))
abline(v=as.numeric(max_steps$time), col="red")
text(as.numeric(max_steps$time), 0, col="red"))
text(as.numeric(max_steps$time), 0, col="red")
text(as.numeric(max_steps$time), 0, "test", col="red")
text(as.numeric(max_steps$time), -1, "test", col="red")
text(as.numeric(max_steps$time), -1, "test", col="red")
text(as.numeric(max_steps$time), -1, as.string(max_steps$time), col="red")
?as.text
?as.str
?as.char
?as.character
as.character(max_steps$time)
hm(max_steps$time)
HM(max_steps$time)
format(max_steps$time, format="%H:%M")
text(as.numeric(max_steps$time), -1, format(max_steps$time, format="%H:%M"), col="red")
plot(steps_mean_interval$time, steps_mean_interval$x, type = "l",
main="Average number of steps in a day",
xlab="Time interval", ylab="Number of steps")
max_steps <- subset(steps_mean_interval, x==max(steps_mean_interval$x))
abline(v=as.numeric(max_steps$time), col="red")
text(as.numeric(max_steps$time), -1, format(max_steps$time, format="%H:%M"),
col="red")
sum(is.na(acty$steps))
acty <- read.csv("activity/activity.csv")
str_x <- formatC(acty$interval, width=4, flag="0")
str_y <- paste(substr(str_x, 1, 2), ":", substr(str_x, 3, 4), sep="")
acty$time <- hm(str_y)
sum(is.na(acty$steps))
steps_mean_each_day
steps_median_each_day
for (i in 1:nrow(acty)) {
if (is.na(acty[i, "steps"])) {
acty[i, "steps"] <-
steps_mean_interval$x[steps_mean_interval$interval==acty[i,"interval"]]
}
}
new_steps_each_day <- aggregate(acty$steps, list(Date = acty$date), sum)
qplot(steps_each_day$x, geom="histogram")
new_steps_mean_each_day <- mean(new_steps_each_day$x)
new_steps_median_each_day <- median(new_steps_each_day$x)
new_steps_mean_each_day
new_steps_median_each_day
View(new_steps_each_day)
?weekday
?weekdays
max_steps$time
View(acty)
acty$date
weekdays(acty$date)
weekdays("2015-09-17")
as.date("2012-05-03")
?Date
?weekday
?weekdays
as.POSIXct("2012-05-03")
weekdays(as.POSIXct("2012-05-03"))
?is.weekend
?wday
wday(as.POSIXct("2012-05-03"))
wday(as.POSIXct("2012-05-03")) %in% 1:5
wday(as.POSIXct("2015-09-17")) %in% 1:5
wday(as.POSIXct("2015-09-17")
)
wday(as.POSIXct("2015-09-17"))
wday(as.POSIXct("2015-09-18"))
wday(as.POSIXct("2015-09-19"))
wday(as.POSIXct("2015-09-20"))
wday(as.POSIXct("2012-05-03")) %in% c(1,7)
wday(as.POSIXct(old_acty$date)) %in% c(1,7)
old_acty$date
acty <- read.csv("activity/activity.csv")
old_acty <- acty
wday(as.POSIXct(old_acty$date)) %in% c(1,7)
as.POSIXct(old_acty$date)
wday(as.POSIXct(old_acty$date))
old_acty$wkend <- wday(as.POSIXct(old_acty$date)) %in% c(1,7)
View(max_steps)
View(old_acty)
acty
View(acty)
old_acty
